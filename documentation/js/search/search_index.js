var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.296,1,2.271]],["body/controllers/AppController.html",[0,1.978,1,3.467,2,1.547,3,0.378,4,0.378,5,0.336,6,3.44,7,0.511,8,1.723,9,5.112,10,1.348,11,0.026,12,0.77,13,4.074,14,1.348,15,1.14,16,0.593,17,0.77,18,2.462,19,1.66,20,3.178,21,3.44,22,4.074,23,0.378,24,0.016,25,2.255,26,1.922,27,1.348,28,4.074,29,0.02,30,0.02]],["title/modules/AppModule.html",[31,1.39,32,2.271]],["body/modules/AppModule.html",[1,3.295,2,1.624,3,0.282,4,0.282,5,0.251,11,0.026,16,0.656,17,0.575,20,3.251,21,2.566,23,0.282,24,0.012,29,0.016,30,0.016,31,1.743,32,4.376,33,1.434,34,2.018,35,2.566,36,2.566,37,2.566,38,3.55,39,3.55,40,3.55,41,3.251,42,2.368,43,1.682,44,1.682,45,3.039,46,2.585,47,2.585,48,3.039,49,2.566,50,3.174,51,2.566,52,2.022,53,1.077,54,3.039,55,3.039,56,3.039,57,3.039,58,3.039,59,3.039,60,3.039,61,3.039]],["title/injectables/AppService.html",[20,1.889,62,0.695]],["body/injectables/AppService.html",[3,0.41,4,0.41,5,0.365,7,0.554,8,1.814,9,5.265,11,0.026,12,0.836,14,1.462,15,1.2,16,0.456,17,0.836,20,3.035,23,0.41,24,0.017,27,1.462,29,0.021,30,0.021,62,1.116,63,1.8,64,3.732,65,4.42,66,4.42,67,4.42]],["title/controllers/AuthController.html",[0,1.296,68,2.271]],["body/controllers/AuthController.html",[0,0.918,2,0.918,3,0.224,4,0.224,5,0.2,7,0.303,8,1.198,10,1.596,11,0.027,12,0.912,14,1.596,16,0.632,17,0.685,18,1.461,19,0.985,23,0.224,24,0.009,26,1.14,27,1.596,29,0.014,30,0.014,68,2.41,69,2.041,70,1.608,71,2.417,72,3.622,73,3.622,74,2.21,75,3.059,76,3.622,77,2.417,78,4.074,79,2.417,80,2.417,81,1.832,82,1.133,83,1.709,84,4.581,85,2.417,86,2.417,87,2.417,88,2.417,89,2.417,90,2.417,91,2.189,92,2.417,93,3.002,94,3.622,95,2.417,96,0.424,97,1.608,98,1.608,99,2.041,100,1.793,101,1.793,102,2.049,103,2.417,104,2.215,105,1.793,106,1.14,107,2.041,108,1.338,109,2.041,110,1.461,111,2.417,112,1.608,113,2.417,114,2.625,115,2.417,116,2.041,117,2.417,118,2.417,119,1.14,120,2.189,121,2.417,122,0.8,123,1.119,124,1.058,125,2.041,126,2.417,127,2.417,128,2.417,129,2.417,130,2.041,131,2.417,132,2.417,133,3.622,134,2.417,135,2.417,136,2.417]],["title/modules/AuthModule.html",[31,1.39,38,2.063]],["body/modules/AuthModule.html",[2,1.656,3,0.29,4,0.29,5,0.258,11,0.026,16,0.651,17,0.591,23,0.29,24,0.012,29,0.017,30,0.017,31,1.777,33,1.474,34,2.058,38,3.935,41,3.281,42,2.414,43,1.729,44,1.729,46,2.636,47,2.636,50,2.319,68,3.344,104,3.022,105,2.319,137,2.639,138,2.639,139,3.125,140,3.582,141,3.582,142,3.125,143,3.125,144,2.639,145,3.125,146,4.363,147,1.729,148,3.125,149,3.125,150,2.319,151,3.125,152,3.125,153,3.125,154,2.639,155,3.125,156,3.125,157,3.125]],["title/injectables/AuthService.html",[62,0.695,104,1.74]],["body/injectables/AuthService.html",[3,0.263,4,0.263,5,0.234,7,0.355,8,1.347,11,0.026,12,0.901,14,1.347,15,1.256,16,0.538,17,0.536,23,0.263,24,0.011,26,1.921,27,1.576,29,0.016,30,0.016,62,0.829,63,1.155,74,2.339,75,3.438,81,1.809,82,1.119,83,1.688,91,1.713,96,0.835,102,2.709,104,2.076,106,1.337,119,1.921,120,2.461,122,1.576,123,1.61,124,1.783,150,2.103,158,2.394,159,4.072,160,2.835,161,5.915,162,2.835,163,4.072,164,2.835,165,4.072,166,3.171,167,2.835,168,2.253,169,2.076,170,2.835,171,3.438,172,2.835,173,4.072,174,2.835,175,2.835,176,2.835,177,2.394,178,2.835,179,2.835,180,2.835,181,2.835,182,2.835,183,2.835]],["title/classes/Cart.html",[24,0.013,184,1.889]],["body/classes/Cart.html",[3,0.319,4,0.319,5,0.284,7,0.431,10,1.749,11,0.026,12,1,15,1.02,16,0.546,23,0.49,24,0.013,29,0.018,30,0.018,53,1.219,96,1.038,122,1.138,123,1.441,184,2.925,185,1.402,186,2.289,187,1.899,188,4.464,189,4.464,190,3.518,191,3.194,192,4.062,193,3.441,194,2.58,195,3.441,196,2.905,197,2.553,198,3.936,199,3.441,200,2.376,201,2.289,202,3.102,203,2.905,204,1.623,205,3.441,206,2.553,207,2.905,208,2.289,209,2.905]],["title/controllers/CartController.html",[0,1.296,210,2.271]],["body/controllers/CartController.html",[0,0.891,2,0.891,3,0.218,4,0.218,5,0.194,7,0.294,8,1.172,10,1.412,11,0.026,12,0.807,14,1.412,15,0.934,16,0.592,17,0.444,18,1.418,19,0.956,23,0.218,24,0.009,25,1.299,26,1.107,27,1.412,29,0.014,30,0.014,70,1.561,74,2.391,78,4.53,81,1.62,82,1.002,83,1.512,84,4.014,91,2.579,96,0.621,97,2.84,98,2.357,99,1.982,106,1.107,108,1.299,110,1.418,114,2.873,116,1.982,122,1.688,124,1.868,130,3.603,184,3.248,190,3.163,197,1.741,210,2.357,211,1.982,212,2.991,213,2.991,214,2.991,215,2.347,216,3.465,217,2.347,218,2.347,219,1.982,220,2.347,221,2.347,222,2.347,223,2.347,224,2.347,225,2.991,226,1.982,227,1.741,228,2.347,229,1.982,230,2.347,231,2.347,232,2.362,233,1.982,234,1.982,235,2.347,236,2.347,237,2.347,238,3.542,239,2.347,240,2.347,241,2.357,242,2.347,243,2.628,244,2.141,245,2.347,246,2.991,247,2.347,248,2.347,249,2.347,250,2.347]],["title/modules/CartModule.html",[31,1.39,39,2.063]],["body/modules/CartModule.html",[2,1.873,3,0.347,4,0.347,5,0.309,11,0.026,16,0.629,17,0.708,23,0.347,24,0.014,29,0.019,30,0.019,31,2.01,33,1.767,34,2.327,39,3.78,42,2.73,43,2.073,44,2.073,46,2.982,47,2.264,52,2.493,53,1.327,82,0.88,184,2.073,200,1.91,208,3.283,210,3.671,232,3.462,233,3.164,251,3.164,252,3.164,253,3.746,254,3.746,255,3.164,256,2.78,257,3.746]],["title/injectables/CartService.html",[62,0.695,232,1.889]],["body/injectables/CartService.html",[3,0.149,4,0.149,5,0.133,7,0.202,8,0.871,11,0.027,12,0.911,14,1.511,15,1.324,16,0.439,17,0.304,23,0.149,24,0.006,26,0.759,27,1.595,29,0.01,30,0.01,53,0.57,62,0.536,63,0.655,74,2.387,81,1.83,82,1.132,83,1.708,96,0.845,119,1.241,120,2.331,122,1.814,124,2,169,2.73,184,2.668,188,1.359,189,3.258,190,3.563,191,2.331,194,2.528,204,0.759,206,2.862,212,2.222,213,2.222,214,2.222,216,3.622,219,2.222,232,1.456,234,1.359,241,3.039,255,1.359,258,1.359,259,3.339,260,2.632,261,2.632,262,1.609,263,2.862,264,1.609,265,2.632,266,2.632,267,1.609,268,1.609,269,4.071,270,1.609,271,1.609,272,2.632,273,1.609,274,2.632,275,1.609,276,1.609,277,2.632,278,1.609,279,1.194,280,1.609,281,3.858,282,1.609,283,1.609,284,2.632,285,1.609,286,2.632,287,1.359,288,1.609,289,3.339,290,2.632,291,1.953,292,2.018,293,2.632,294,3.858,295,2.632,296,2.632,297,2.478,298,2.632,299,1.609,300,1.609,301,1.609,302,2.632,303,3.339,304,1.609,305,1.609,306,1.609]],["title/classes/CreateProductDTO.html",[24,0.013,307,2.063]],["body/classes/CreateProductDTO.html",[3,0.34,4,0.34,5,0.303,7,0.46,10,1.924,11,0.026,12,1.099,15,1.361,16,0.379,19,1.495,23,0.34,24,0.014,29,0.019,30,0.019,82,1.282,96,1.019,185,1.495,187,1.982,194,2.693,292,3.299,307,2.941,308,5.11,309,3.098,310,3.299,311,3.633,312,4.839,313,3.669,314,3.669,315,3.669,316,3.669]],["title/classes/CreateUserDto.html",[24,0.013,93,1.889]],["body/classes/CreateUserDto.html",[3,0.34,4,0.34,5,0.303,7,0.46,10,1.924,11,0.026,12,1.099,15,1.41,16,0.379,19,1.495,23,0.34,24,0.014,29,0.019,30,0.019,93,2.693,96,1.019,100,4.489,106,2.576,166,3.633,168,3.022,185,1.495,187,1.982,312,4.839,317,3.098,318,4.051,319,3.669,320,3.669,321,3.669,322,3.669]],["title/classes/FilterProductDTO.html",[24,0.013,323,2.063]],["body/classes/FilterProductDTO.html",[3,0.378,4,0.378,5,0.336,7,0.511,10,1.723,11,0.026,12,0.985,15,1.325,16,0.421,19,1.66,23,0.378,24,0.016,29,0.02,30,0.02,83,2.144,96,0.913,185,1.66,187,2.122,310,3.471,323,3.148,324,4.85,325,3.44,326,4.85,327,6.256,328,4.074,329,4.074]],["title/classes/Item.html",[24,0.013,191,2.063]],["body/classes/Item.html",[3,0.295,4,0.295,5,0.263,7,0.399,10,1.905,11,0.026,12,1.089,15,1.2,16,0.456,23,0.471,24,0.012,29,0.017,30,0.017,53,1.127,82,1.192,96,1.071,122,1.052,185,1.296,187,1.799,191,3.066,192,4.265,194,3.299,196,2.686,197,2.36,198,3.73,200,2.252,201,2.117,202,2.939,203,2.686,204,1.501,207,2.686,241,3.376,269,4.285,291,3.765,292,3.066,330,2.117,331,3.181,332,3.181,333,2.252,334,3.181,335,3.181,336,3.181,337,2.686,338,2.36,339,2.686]],["title/classes/ItemDTO.html",[24,0.013,216,2.063]],["body/classes/ItemDTO.html",[3,0.347,4,0.347,5,0.309,7,0.47,10,1.94,11,0.026,12,1.109,15,1.283,16,0.387,19,1.526,23,0.347,24,0.014,29,0.019,30,0.019,82,1.296,96,1.027,185,1.526,187,2.01,194,3.245,216,2.982,241,3.671,291,4.093,292,3.334,312,4.858,340,3.164,341,3.746,342,3.746,343,3.746,344,3.746]],["title/injectables/JwtAuthGuard.html",[62,0.695,110,2.063]],["body/injectables/JwtAuthGuard.html",[3,0.436,4,0.436,5,0.388,11,0.026,16,0.588,17,0.889,23,0.436,24,0.018,29,0.022,30,0.022,62,1.16,63,1.915,110,3.442,147,2.602,345,3.97,346,3.97,347,3.128,348,4.701]],["title/injectables/JwtStrategy.html",[62,0.695,140,2.063]],["body/injectables/JwtStrategy.html",[3,0.328,4,0.328,5,0.292,7,0.444,8,1.571,11,0.026,12,0.898,14,1.17,16,0.617,17,0.669,23,0.328,24,0.014,27,1.17,29,0.018,30,0.018,50,3.523,51,2.987,62,0.967,63,1.441,74,2.184,81,1.343,82,0.831,83,1.253,91,2.137,96,0.62,106,1.668,119,2.529,140,2.87,144,2.987,147,1.957,154,2.987,168,1.957,177,2.987,190,2.354,347,2.354,349,2.987,350,4.01,351,3.537,352,4.749,353,3.537,354,3.537,355,2.987,356,2.624,357,2.987,358,2.987,359,2.987,360,2.987,361,3.537,362,3.537,363,3.537,364,3.537,365,3.537,366,3.537,367,3.537,368,3.537]],["title/injectables/LocalAuthGuard.html",[62,0.695,112,2.271]],["body/injectables/LocalAuthGuard.html",[3,0.436,4,0.436,5,0.388,11,0.026,16,0.588,17,0.889,23,0.436,24,0.018,29,0.022,30,0.022,62,1.16,63,1.915,112,3.79,147,2.602,346,3.97,347,3.128,369,3.97,370,4.701]],["title/injectables/LocalStrategy.html",[62,0.695,141,2.063]],["body/injectables/LocalStrategy.html",[3,0.308,4,0.308,5,0.275,7,0.417,8,1.506,11,0.026,12,0.861,14,1.1,15,1.322,16,0.577,17,0.629,23,0.308,24,0.013,25,1.84,27,1.1,29,0.017,30,0.017,62,0.927,63,1.354,74,2.115,81,1.729,82,1.069,83,1.613,96,0.798,104,3.081,105,2.467,119,1.568,122,1.1,123,1.605,124,1.456,141,2.752,147,1.84,166,3.717,168,1.84,169,2.321,243,2.467,244,2.009,347,2.212,350,3.845,355,2.807,356,2.467,358,2.807,359,2.807,360,2.807,371,2.807,372,3.325,373,3.325,374,4.553,375,3.325,376,2.807,377,4.553,378,3.325]],["title/classes/Product.html",[24,0.013,333,1.74]],["body/classes/Product.html",[3,0.317,4,0.317,5,0.282,7,0.428,10,1.868,11,0.026,12,1.068,15,1.333,16,0.479,23,0.488,24,0.013,29,0.018,30,0.018,53,1.209,82,1.237,96,1.035,122,1.129,185,1.391,187,1.889,192,4.276,194,2.566,200,2.364,201,2.272,202,3.085,204,1.611,292,3.182,310,3.182,311,3.504,333,2.684,379,2.272,380,3.414,381,3.414,382,3.414,383,3.414,384,2.533,385,3.414,386,2.533,387,2.272,388,2.883]],["title/controllers/ProductController.html",[0,1.296,389,2.271]],["body/controllers/ProductController.html",[0,0.601,2,0.601,3,0.147,4,0.147,5,0.131,7,0.199,8,0.859,10,1.395,11,0.026,12,0.798,14,1.395,15,1.132,16,0.468,17,0.299,18,0.957,19,0.645,23,0.147,24,0.006,25,0.876,27,1.499,29,0.01,30,0.01,70,1.053,74,2.378,81,1.601,82,1.124,83,1.494,91,1.995,96,0.739,97,1.728,98,1.053,122,1.499,124,1.847,169,1.948,225,2.788,226,1.337,227,1.175,243,2.45,244,2.549,246,2.788,307,3.426,310,1.569,323,2.309,333,3.223,389,1.728,390,1.337,391,1.583,392,2.193,393,2.193,394,2.193,395,2.597,396,2.788,397,1.337,398,3.562,399,4.497,400,2.193,401,1.583,402,1.583,403,1.337,404,3.821,405,4.532,406,1.583,407,4.532,408,1.583,409,3.952,410,1.337,411,2.597,412,3.821,413,2.597,414,1.583,415,1.583,416,1.583,417,2.597,418,2.193,419,1.583,420,1.583,421,2.597,422,1.583,423,1.337,424,2.597,425,2.597,426,1.583,427,1.583,428,3.827,429,1.053,430,1.337,431,1.337,432,1.337,433,1.827,434,1.337,435,1.175,436,1.583,437,1.583,438,3.562,439,1.583,440,1.583,441,3.129,442,1.583,443,2.597,444,1.583,445,2.597,446,1.583,447,3.129,448,3.129,449,1.583,450,1.583,451,1.583,452,3.302,453,1.583,454,1.583,455,1.583,456,1.583,457,1.583,458,1.583,459,1.583,460,1.583]],["title/modules/ProductModule.html",[31,1.39,40,2.063]],["body/modules/ProductModule.html",[2,1.873,3,0.347,4,0.347,5,0.309,11,0.026,16,0.629,17,0.708,23,0.347,24,0.014,29,0.019,30,0.019,31,2.01,33,1.767,34,2.327,40,3.78,42,2.73,43,2.073,44,2.073,46,2.982,47,2.264,52,2.493,53,1.327,82,0.88,200,1.91,256,2.78,333,1.91,387,3.283,389,3.671,433,3.462,434,3.164,435,2.78,461,3.164,462,3.164,463,3.746,464,3.746,465,3.746]],["title/injectables/ProductService.html",[62,0.695,433,1.889]],["body/injectables/ProductService.html",[3,0.166,4,0.166,5,0.148,7,0.225,8,0.951,11,0.027,12,0.954,14,1.589,15,1.183,16,0.496,17,0.339,23,0.166,24,0.007,26,0.847,27,1.589,29,0.011,30,0.011,53,0.636,62,0.585,63,0.731,74,2.519,81,1.823,82,1.128,83,1.701,96,0.842,119,1.356,120,1.085,122,1.589,124,2.103,169,2.941,204,0.847,244,1.085,263,3.052,279,1.332,307,3.486,310,2.174,323,3.048,326,2.428,333,2.097,384,1.332,386,1.332,392,2.428,393,2.428,394,2.428,396,3.037,397,2.428,403,2.428,409,3.339,410,2.428,418,4.055,423,1.516,429,1.194,430,1.516,431,1.516,432,1.516,433,1.591,435,1.332,441,3.563,447,3.563,448,3.563,466,1.516,467,4.113,468,3.597,469,1.795,470,1.795,471,3.597,472,1.795,473,1.795,474,1.795,475,1.795,476,1.795,477,1.795,478,1.795,479,1.795,480,1.795,481,1.795,482,1.795,483,1.795,484,1.795,485,1.795,486,1.795,487,1.795,488,1.795,489,1.795,490,1.795,491,2.875,492,1.795,493,2.875,494,1.795]],["title/guards/RolesGuard.html",[114,2.063,495,2.532]],["body/guards/RolesGuard.html",[3,0.311,4,0.311,5,0.277,7,0.42,8,1.514,11,0.027,12,0.865,14,1.108,16,0.578,17,0.633,23,0.311,24,0.013,25,1.854,27,1.514,29,0.018,30,0.018,62,0.932,81,1.738,82,1.075,83,1.621,96,0.802,107,2.829,108,1.854,109,2.829,114,2.766,119,1.58,122,1.514,123,1.035,386,2.485,496,3.35,497,2.829,498,5.603,499,3.35,500,6.056,501,3.35,502,4.577,503,5.603,504,3.35,505,3.35,506,4.577,507,2.829,508,2.485,509,3.35,510,4.577,511,3.35,512,3.35,513,3.35,514,3.35,515,3.35,516,3.35]],["title/classes/User.html",[24,0.013,123,1.055]],["body/classes/User.html",[3,0.468,4,0.468,5,0.417,11,0.024,23,0.468,24,0.019,29,0.023,30,0.023,123,1.837,185,2.057,517,4.264]],["title/classes/User-1.html",[24,0.011,123,0.884,297,2.123]],["body/classes/User-1.html",[3,0.314,4,0.314,5,0.28,7,0.425,10,1.863,11,0.026,12,1.065,15,1.33,16,0.541,23,0.486,24,0.013,29,0.018,30,0.018,53,1.2,96,1.032,106,2.474,108,2.902,122,1.121,123,1.621,166,3.49,168,2.902,185,1.38,187,1.879,192,4.27,200,2.352,201,2.254,202,3.069,204,1.598,229,2.861,318,3.891,518,2.254,519,3.388,520,3.388,521,3.388,522,3.388,523,2.514,524,2.254,525,2.861]],["title/controllers/UserController.html",[0,1.296,526,2.271]],["body/controllers/UserController.html",[0,1.094,2,1.094,3,0.267,4,0.267,5,0.238,7,0.361,8,1.363,10,1.363,11,0.026,12,0.779,14,1.363,15,1.052,16,0.573,17,0.545,18,1.741,19,1.174,23,0.267,24,0.011,25,1.594,26,1.359,27,1.363,29,0.016,30,0.016,70,1.917,74,2.352,81,1.564,82,0.967,83,1.459,93,3.195,96,0.722,97,1.917,98,1.917,101,2.138,102,2.268,123,1.784,124,1.804,125,2.433,169,2.675,227,2.138,398,2.433,399,3.478,400,3.478,409,3.056,428,3.478,429,1.917,438,2.433,441,3.056,447,3.056,448,3.056,526,2.741,527,2.433,528,4.119,529,4.119,530,2.881,531,2.881,532,2.881,533,2.881,534,4.119,535,2.881,536,2.433,537,2.138,538,2.881,539,2.881,540,2.433,541,2.881,542,2.881,543,2.881,544,2.881]],["title/modules/UserModule.html",[31,1.39,41,1.889]],["body/modules/UserModule.html",[2,1.817,3,0.332,4,0.332,5,0.296,11,0.026,16,0.62,17,0.677,23,0.332,24,0.014,29,0.018,30,0.018,31,1.95,33,1.689,34,2.258,41,3.49,42,2.649,43,1.981,44,1.981,46,2.893,47,2.163,52,2.382,53,1.268,82,0.841,102,3.141,123,1.106,200,1.825,256,2.656,524,3.185,526,3.589,536,3.023,537,2.656,545,3.023,546,3.023,547,3.023,548,3.58,549,4.787,550,3.58,551,3.58]],["title/injectables/UserService.html",[62,0.695,102,1.61]],["body/injectables/UserService.html",[3,0.271,4,0.271,5,0.241,7,0.366,8,1.375,11,0.026,12,0.916,14,1.375,15,1.06,16,0.599,17,0.552,23,0.271,24,0.011,26,1.377,27,1.375,29,0.016,30,0.016,53,1.034,62,0.846,63,1.189,74,2.362,81,1.839,82,1.137,83,1.716,93,3.087,96,0.849,101,2.166,102,1.961,119,1.961,120,1.764,122,1.375,123,1.497,124,2.12,168,2.68,169,2.691,171,3.511,204,1.377,263,3.916,279,2.166,429,1.942,523,2.166,537,2.166,552,2.465,553,4.158,554,4.158,555,2.919,556,2.919,557,4.843,558,4.158,559,2.919,560,4.158,561,2.919,562,2.919,563,2.919,564,2.919,565,2.919,566,2.919,567,2.919,568,2.919,569,2.919]],["title/coverage.html",[570,3.44]],["body/coverage.html",[0,1.969,1,1.622,5,0.201,6,2.058,11,0.026,20,1.349,24,0.023,29,0.014,30,0.014,62,1.207,64,2.058,68,1.622,69,2.058,93,1.349,96,0.427,100,1.808,102,1.15,104,1.242,106,1.15,110,1.473,112,1.622,114,1.473,123,1.126,140,1.473,141,1.473,158,2.058,184,1.349,186,2.425,191,1.473,208,1.622,210,1.622,211,2.058,216,1.473,232,1.349,244,1.473,258,2.058,287,5.736,307,1.473,308,2.058,309,2.058,317,2.058,323,1.473,324,2.058,325,2.058,330,2.425,333,1.242,338,1.808,340,2.058,345,2.058,349,2.058,369,2.058,371,2.058,379,2.425,387,1.622,389,1.622,390,2.058,433,1.349,466,2.058,495,1.808,497,2.058,508,1.808,517,2.058,518,2.425,524,1.622,526,1.622,527,2.058,552,2.058,570,1.808,571,2.437,572,2.437,573,2.437,574,3.645,575,5.442,576,4.845,577,3.078,578,5.442,579,6.038,580,5.186,581,3.645,582,3.645,583,2.058,584,2.437,585,2.058,586,2.437,587,2.437]],["title/dependencies.html",[34,1.934,588,2.416]],["body/dependencies.html",[11,0.026,17,0.777,19,1.675,29,0.02,30,0.02,34,1.94,49,3.472,53,1.457,147,2.275,150,3.051,204,1.94,356,4.28,357,3.472,376,3.472,507,3.472,589,6.274,590,4.112,591,4.112,592,4.112,593,4.112,594,4.112,595,4.112,596,4.112,597,4.112,598,4.112,599,4.112,600,4.112,601,4.112,602,4.112,603,4.112,604,4.112,605,4.112]],["title/miscellaneous/enumerations.html",[606,1.35,607,3.461]],["body/miscellaneous/enumerations.html",[7,0.616,11,0.025,29,0.022,30,0.022,108,3.235,123,1.807,606,2.316,607,4.146,608,4.91,609,4.91,610,4.936,611,5.846]],["title/miscellaneous/functions.html",[606,1.35,612,3.461]],["body/miscellaneous/functions.html",[7,0.641,11,0.023,29,0.023,30,0.023,583,4.313,585,5.36,606,2.409,612,4.313,613,5.108]],["title/index.html",[7,0.359,614,2.861,615,2.861]],["body/index.html",[11,0.026,29,0.019,30,0.019,311,2.569,318,2.864,540,3.26,570,2.864,616,3.861,617,3.861,618,3.861,619,3.861,620,3.861,621,3.861,622,3.861,623,3.861,624,3.861,625,3.861,626,6.424,627,3.861,628,3.861,629,6.308,630,3.861,631,3.861,632,5.032,633,3.861,634,3.861,635,3.861,636,3.861,637,5.032,638,5.032,639,3.861,640,3.861,641,3.861,642,3.861,643,3.861,644,3.26,645,3.861,646,3.861,647,3.861,648,3.861]],["title/modules.html",[33,2.187]],["body/modules.html",[11,0.022,29,0.022,30,0.022,32,3.079,33,2.183,38,2.796,39,2.796,40,2.796,41,2.561,649,6.495,650,6.495,651,6.495,652,6.495]],["title/overview.html",[653,3.915]],["body/overview.html",[2,1.234,11,0.026,20,2.841,29,0.017,30,0.017,32,4.362,33,1.534,34,2.115,35,2.745,36,2.745,37,2.745,38,3.929,39,3.508,40,3.508,41,3.404,42,2.482,43,1.799,44,1.799,63,1.324,102,2.901,104,2.617,137,2.745,138,2.745,140,3.102,141,3.102,185,1.324,232,2.841,251,2.745,252,2.745,297,2.412,433,2.841,461,2.745,462,2.745,495,2.412,545,2.745,546,2.745,547,2.745,653,2.745,654,4.484,655,4.484]],["title/properties.html",[187,1.67,588,2.416]],["body/properties.html",[11,0.026,29,0.023,30,0.023,187,2.045,311,3.341,644,4.24,656,5.021,657,5.021,658,5.021,659,5.021]],["title/miscellaneous/typealiases.html",[606,1.35,660,4.099]],["body/miscellaneous/typealiases.html",[7,0.599,11,0.022,29,0.022,30,0.022,96,0.837,186,3.179,206,4.267,330,3.179,337,4.856,379,3.179,384,4.267,518,3.179,523,4.267,606,2.253,661,4.777,662,4.034,663,4.034,664,4.034,665,4.034]],["title/miscellaneous/variables.html",[606,1.35,666,3.461]],["body/miscellaneous/variables.html",[7,0.499,11,0.026,15,0.871,29,0.02,30,0.02,96,0.698,106,2.93,108,2.204,186,2.65,208,3.416,209,3.363,330,2.65,338,3.809,339,3.363,379,2.65,387,3.416,388,3.363,508,3.809,518,2.65,524,3.416,525,3.363,577,3.363,606,1.878,610,5.371,662,3.363,663,3.363,664,3.363,665,3.363,666,3.363,667,5.134,668,6.361,669,3.982]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cart.html":{},"controllers/CartController.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/CreateProductDTO.html":{},"classes/CreateUserDto.html":{},"classes/FilterProductDTO.html":{},"classes/Item.html":{},"classes/ItemDTO.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"guards/RolesGuard.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":287,"title":{},"body":{"injectables/CartService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":657,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":601,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":596,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":579,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":574,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":580,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":576,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":575,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":582,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":581,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":297,"title":{"classes/User-1.html":{}},"body":{"injectables/CartService.html":{},"overview.html":{}}}],["1.0.0",{"_index":598,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":567,"title":{},"body":{"injectables/UserService.html":{}}}],["2.2.0",{"_index":590,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":603,"title":{},"body":{"dependencies.html":{}}}],["3600s",{"_index":157,"title":{},"body":{"modules/AuthModule.html":{}}}],["4.0.0",{"_index":597,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":654,"title":{},"body":{"overview.html":{}}}],["6.1.3",{"_index":594,"title":{},"body":{"dependencies.html":{}}}],["6.7.2",{"_index":595,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":605,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":655,"title":{},"body":{"overview.html":{}}}],["9.0.0",{"_index":589,"title":{},"body":{"dependencies.html":{}}}],["9.2.1",{"_index":591,"title":{},"body":{"dependencies.html":{}}}],["access_token",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["additemtocart",{"_index":212,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{}}}],["additemtocart(@request",{"_index":237,"title":{},"body":{"controllers/CartController.html":{}}}],["additemtocart(req",{"_index":215,"title":{},"body":{"controllers/CartController.html":{}}}],["additemtocart(userid",{"_index":266,"title":{},"body":{"injectables/CartService.html":{}}}],["addproduct",{"_index":392,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["addproduct(@body",{"_index":454,"title":{},"body":{"controllers/ProductController.html":{}}}],["addproduct(createproductdto",{"_index":397,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["adduser",{"_index":553,"title":{},"body":{"injectables/UserService.html":{}}}],["adduser(createuserdto",{"_index":558,"title":{},"body":{"injectables/UserService.html":{}}}],["admin",{"_index":611,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["aliases",{"_index":661,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allproducts",{"_index":445,"title":{},"body":{"controllers/ProductController.html":{}}}],["api",{"_index":399,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["apioperation",{"_index":428,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["apioperation({summary",{"_index":398,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["apiproperty",{"_index":312,"title":{},"body":{"classes/CreateProductDTO.html":{},"classes/CreateUserDto.html":{},"classes/ItemDTO.html":{}}}],["apipropertyoptional",{"_index":327,"title":{},"body":{"classes/FilterProductDTO.html":{}}}],["apitags",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CartController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["apitags('auth",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('cart",{"_index":235,"title":{},"body":{"controllers/CartController.html":{}}}],["apitags('main",{"_index":22,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('product",{"_index":436,"title":{},"body":{"controllers/ProductController.html":{}}}],["apitags('user",{"_index":538,"title":{},"body":{"controllers/UserController.html":{}}}],["app",{"_index":540,"title":{},"body":{"controllers/UserController.html":{},"index.html":{}}}],["app'})@post('create",{"_index":531,"title":{},"body":{"controllers/UserController.html":{}}}],["app.controller",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":624,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":32,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":20,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":74,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["auth",{"_index":71,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":143,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":68,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":346,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":348,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":370,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":38,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":644,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":104,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"injectables/LocalStrategy.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["based",{"_index":405,"title":{},"body":{"controllers/ProductController.html":{}}}],["bcrypt",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["bcrypt.compare(password",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(newuser.password",{"_index":566,"title":{},"body":{"injectables/UserService.html":{}}}],["body",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CartController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":506,"title":{},"body":{"guards/RolesGuard.html":{}}}],["bootstrap",{"_index":585,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":652,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":649,"title":{},"body":{"modules.html":{}}}],["building",{"_index":619,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":498,"title":{},"body":{"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":502,"title":{},"body":{"guards/RolesGuard.html":{}}}],["cart",{"_index":184,"title":{"classes/Cart.html":{}},"body":{"classes/Cart.html":{},"controllers/CartController.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"coverage.html":{}}}],["cart.controller",{"_index":254,"title":{},"body":{"modules/CartModule.html":{}}}],["cart.items.findindex",{"_index":295,"title":{},"body":{"injectables/CartService.html":{}}}],["cart.items.foreach((item",{"_index":288,"title":{},"body":{"injectables/CartService.html":{}}}],["cart.items.push",{"_index":304,"title":{},"body":{"injectables/CartService.html":{}}}],["cart.items.splice(itemindex",{"_index":306,"title":{},"body":{"injectables/CartService.html":{}}}],["cart.items[itemindex",{"_index":298,"title":{},"body":{"injectables/CartService.html":{}}}],["cart.name",{"_index":257,"title":{},"body":{"modules/CartModule.html":{}}}],["cart.save",{"_index":303,"title":{},"body":{"injectables/CartService.html":{}}}],["cart.service",{"_index":233,"title":{},"body":{"controllers/CartController.html":{},"modules/CartModule.html":{}}}],["cart.totalprice",{"_index":286,"title":{},"body":{"injectables/CartService.html":{}}}],["cart/cart.module",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["cartcontroller",{"_index":210,"title":{"controllers/CartController.html":{}},"body":{"controllers/CartController.html":{},"modules/CartModule.html":{},"coverage.html":{}}}],["cartdocument",{"_index":206,"title":{},"body":{"classes/Cart.html":{},"injectables/CartService.html":{},"miscellaneous/typealiases.html":{}}}],["cartmodel",{"_index":265,"title":{},"body":{"injectables/CartService.html":{}}}],["cartmodule",{"_index":39,"title":{"modules/CartModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CartModule.html":{},"modules.html":{},"overview.html":{}}}],["cartschema",{"_index":208,"title":{},"body":{"classes/Cart.html":{},"modules/CartModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cartservice",{"_index":232,"title":{"injectables/CartService.html":{}},"body":{"controllers/CartController.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"coverage.html":{},"overview.html":{}}}],["catch",{"_index":447,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{}}}],["category",{"_index":310,"title":{},"body":{"classes/CreateProductDTO.html":{},"classes/FilterProductDTO.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["class",{"_index":24,"title":{"classes/Cart.html":{},"classes/CreateProductDTO.html":{},"classes/CreateUserDto.html":{},"classes/FilterProductDTO.html":{},"classes/Item.html":{},"classes/ItemDTO.html":{},"classes/Product.html":{},"classes/User.html":{},"classes/User-1.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cart.html":{},"controllers/CartController.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/CreateProductDTO.html":{},"classes/CreateUserDto.html":{},"classes/FilterProductDTO.html":{},"classes/Item.html":{},"classes/ItemDTO.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"guards/RolesGuard.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["classes",{"_index":185,"title":{},"body":{"classes/Cart.html":{},"classes/CreateProductDTO.html":{},"classes/CreateUserDto.html":{},"classes/FilterProductDTO.html":{},"classes/Item.html":{},"classes/ItemDTO.html":{},"classes/Product.html":{},"classes/User.html":{},"classes/User-1.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":137,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":139,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":138,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_cartmodule",{"_index":251,"title":{},"body":{"modules/CartModule.html":{},"overview.html":{}}}],["cluster_cartmodule_providers",{"_index":252,"title":{},"body":{"modules/CartModule.html":{},"overview.html":{}}}],["cluster_productmodule",{"_index":461,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_productmodule_providers",{"_index":462,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":545,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":547,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":546,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["config/configuration",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtStrategy.html":{}}}],["configmodule",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configuration().auth.jwtsecret",{"_index":154,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["const",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Cart.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"classes/Item.html":{},"injectables/LocalStrategy.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"guards/RolesGuard.html":{},"classes/User-1.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CartService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/ProductService.html":{},"guards/RolesGuard.html":{},"injectables/UserService.html":{}}}],["constructor(authservice",{"_index":372,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(cartmodel",{"_index":262,"title":{},"body":{"injectables/CartService.html":{}}}],["constructor(private",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"controllers/CartController.html":{},"injectables/LocalStrategy.html":{},"controllers/ProductController.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{}}}],["constructor(productmodel",{"_index":469,"title":{},"body":{"injectables/ProductService.html":{}}}],["constructor(reflector",{"_index":499,"title":{},"body":{"guards/RolesGuard.html":{}}}],["constructor(usermodel",{"_index":555,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(userservice",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{}}}],["context",{"_index":505,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.getclass",{"_index":513,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.gethandler",{"_index":512,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":514,"title":{},"body":{"guards/RolesGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CartController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CartController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('cart",{"_index":236,"title":{},"body":{"controllers/CartController.html":{}}}],["controller('mall/product",{"_index":437,"title":{},"body":{"controllers/ProductController.html":{}}}],["controller('user",{"_index":539,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CartController.html":{},"modules/CartModule.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["coverage",{"_index":570,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":400,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["createcart",{"_index":259,"title":{},"body":{"injectables/CartService.html":{}}}],["createcart(userid",{"_index":268,"title":{},"body":{"injectables/CartService.html":{}}}],["createproductdto",{"_index":307,"title":{"classes/CreateProductDTO.html":{}},"body":{"classes/CreateProductDTO.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"coverage.html":{}}}],["createuser",{"_index":528,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser(@body",{"_index":542,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser(createuserdto",{"_index":530,"title":{},"body":{"controllers/UserController.html":{}}}],["createuserdto",{"_index":93,"title":{"classes/CreateUserDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["database",{"_index":404,"title":{},"body":{"controllers/ProductController.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/Cart.html":{},"controllers/CartController.html":{},"classes/CreateProductDTO.html":{},"classes/CreateUserDto.html":{},"classes/FilterProductDTO.html":{},"classes/Item.html":{},"classes/ItemDTO.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"classes/User-1.html":{},"controllers/UserController.html":{}}}],["decorators/roles.decorator",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"guards/RolesGuard.html":{}}}],["default",{"_index":668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Cart.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"classes/CreateProductDTO.html":{},"classes/CreateUserDto.html":{},"classes/FilterProductDTO.html":{},"classes/Item.html":{},"classes/ItemDTO.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"guards/RolesGuard.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":225,"title":{},"body":{"controllers/CartController.html":{},"controllers/ProductController.html":{}}}],["delete('/:id",{"_index":247,"title":{},"body":{"controllers/CartController.html":{}}}],["delete('/delete",{"_index":458,"title":{},"body":{"controllers/ProductController.html":{}}}],["deletecart",{"_index":213,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{}}}],["deletecart(@param('id",{"_index":248,"title":{},"body":{"controllers/CartController.html":{}}}],["deletecart(userid",{"_index":219,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{}}}],["deletedcart",{"_index":284,"title":{},"body":{"injectables/CartService.html":{}}}],["deletedproduct",{"_index":493,"title":{},"body":{"injectables/ProductService.html":{}}}],["deleteproduct",{"_index":393,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["deleteproduct(@param('id",{"_index":459,"title":{},"body":{"controllers/ProductController.html":{}}}],["deleteproduct(id",{"_index":403,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["dependencies",{"_index":34,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":311,"title":{},"body":{"classes/CreateProductDTO.html":{},"classes/Product.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":628,"title":{},"body":{"index.html":{}}}],["document",{"_index":202,"title":{},"body":{"classes/Cart.html":{},"classes/Item.html":{},"classes/Product.html":{},"classes/User-1.html":{}}}],["documentation",{"_index":571,"title":{},"body":{"coverage.html":{}}}],["dtos/create",{"_index":429,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dtos/filter",{"_index":431,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["dtos/item.dto",{"_index":234,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{}}}],["e2e",{"_index":639,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":620,"title":{},"body":{"index.html":{}}}],["email",{"_index":318,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User-1.html":{},"index.html":{}}}],["enumerations",{"_index":607,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/role.enum",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"guards/RolesGuard.html":{}}}],["error",{"_index":448,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{}}}],["executioncontext",{"_index":503,"title":{},"body":{"guards/RolesGuard.html":{}}}],["exist",{"_index":246,"title":{},"body":{"controllers/CartController.html":{},"controllers/ProductController.html":{}}}],["expiresin",{"_index":156,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cart.html":{},"controllers/CartController.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/CreateProductDTO.html":{},"classes/CreateUserDto.html":{},"classes/FilterProductDTO.html":{},"classes/Item.html":{},"classes/ItemDTO.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"guards/RolesGuard.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":549,"title":{},"body":{"modules/UserModule.html":{}}}],["express",{"_index":593,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":347,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["extractjwt",{"_index":354,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":362,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":364,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cart.html":{},"controllers/CartController.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/CreateProductDTO.html":{},"classes/CreateUserDto.html":{},"classes/FilterProductDTO.html":{},"classes/Item.html":{},"classes/ItemDTO.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"guards/RolesGuard.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["filter",{"_index":421,"title":{},"body":{"controllers/ProductController.html":{}}}],["filteredproducts",{"_index":443,"title":{},"body":{"controllers/ProductController.html":{}}}],["filterproductdto",{"_index":323,"title":{"classes/FilterProductDTO.html":{}},"body":{"classes/FilterProductDTO.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"coverage.html":{}}}],["filters",{"_index":417,"title":{},"body":{"controllers/ProductController.html":{}}}],["finduser",{"_index":554,"title":{},"body":{"injectables/UserService.html":{}}}],["finduser(username",{"_index":560,"title":{},"body":{"injectables/UserService.html":{}}}],["framework",{"_index":618,"title":{},"body":{"index.html":{}}}],["function",{"_index":584,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":612,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('/:id",{"_index":534,"title":{},"body":{"controllers/UserController.html":{}}}],["get('/:search/:category",{"_index":439,"title":{},"body":{"controllers/ProductController.html":{}}}],["get('/admin",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('/get",{"_index":449,"title":{},"body":{"controllers/ProductController.html":{}}}],["get('/user",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{}}}],["getallproducts",{"_index":467,"title":{},"body":{"injectables/ProductService.html":{}}}],["getcart",{"_index":260,"title":{},"body":{"injectables/CartService.html":{}}}],["getcart(userid",{"_index":272,"title":{},"body":{"injectables/CartService.html":{}}}],["getdashboard",{"_index":72,"title":{},"body":{"controllers/AuthController.html":{}}}],["getdashboard(@request",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["getdashboard(req",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{}}}],["getfilteredproducts",{"_index":468,"title":{},"body":{"injectables/ProductService.html":{}}}],["getfilteredproducts(filterproductdto",{"_index":475,"title":{},"body":{"injectables/ProductService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getproduct",{"_index":394,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["getproduct(@param('id",{"_index":450,"title":{},"body":{"controllers/ProductController.html":{}}}],["getproduct(id",{"_index":410,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["getproducts",{"_index":395,"title":{},"body":{"controllers/ProductController.html":{}}}],["getproducts(@param",{"_index":440,"title":{},"body":{"controllers/ProductController.html":{}}}],["getproducts(filter",{"_index":416,"title":{},"body":{"controllers/ProductController.html":{}}}],["getprofile",{"_index":73,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile(@request",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile(req",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{}}}],["gets",{"_index":411,"title":{},"body":{"controllers/ProductController.html":{}}}],["getting",{"_index":614,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":529,"title":{},"body":{"controllers/UserController.html":{}}}],["getuser(@param('id",{"_index":543,"title":{},"body":{"controllers/UserController.html":{}}}],["getuser(id",{"_index":533,"title":{},"body":{"controllers/UserController.html":{}}}],["guard",{"_index":495,"title":{"guards/RolesGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":496,"title":{},"body":{"guards/RolesGuard.html":{}}}],["guards/jwt.guard",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/local.gurd",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/roles.guard",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{}}}],["hello",{"_index":66,"title":{},"body":{"injectables/AppService.html":{}}}],["id",{"_index":409,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{}}}],["id'})@delete('/delete",{"_index":406,"title":{},"body":{"controllers/ProductController.html":{}}}],["identifier",{"_index":572,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":363,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":509,"title":{},"body":{"guards/RolesGuard.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cart.html":{},"controllers/CartController.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/CreateProductDTO.html":{},"classes/CreateUserDto.html":{},"classes/FilterProductDTO.html":{},"classes/Item.html":{},"classes/ItemDTO.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"guards/RolesGuard.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Cart.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"classes/CreateProductDTO.html":{},"classes/CreateUserDto.html":{},"classes/FilterProductDTO.html":{},"classes/Item.html":{},"classes/ItemDTO.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"guards/RolesGuard.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cart.html":{},"controllers/CartController.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/CreateProductDTO.html":{},"classes/CreateUserDto.html":{},"classes/FilterProductDTO.html":{},"classes/Item.html":{},"classes/ItemDTO.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"guards/RolesGuard.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["information",{"_index":412,"title":{},"body":{"controllers/ProductController.html":{}}}],["injectable",{"_index":62,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CartService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CartService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/ProductService.html":{},"guards/RolesGuard.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":63,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CartService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectmodel",{"_index":279,"title":{},"body":{"injectables/CartService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["injectmodel('cart",{"_index":280,"title":{},"body":{"injectables/CartService.html":{}}}],["injectmodel('user",{"_index":562,"title":{},"body":{"injectables/UserService.html":{}}}],["injectmodel(product.name",{"_index":479,"title":{},"body":{"injectables/ProductService.html":{}}}],["installation",{"_index":625,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":627,"title":{},"body":{"index.html":{}}}],["ispasswordmatch",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{}}}],["item",{"_index":191,"title":{"classes/Item.html":{}},"body":{"classes/Cart.html":{},"injectables/CartService.html":{},"classes/Item.html":{},"coverage.html":{}}}],["item.price",{"_index":290,"title":{},"body":{"injectables/CartService.html":{}}}],["item.productid",{"_index":296,"title":{},"body":{"injectables/CartService.html":{}}}],["item.quantity",{"_index":289,"title":{},"body":{"injectables/CartService.html":{}}}],["item.schema",{"_index":205,"title":{},"body":{"classes/Cart.html":{}}}],["item.subtotalprice",{"_index":301,"title":{},"body":{"injectables/CartService.html":{}}}],["itemdocument",{"_index":337,"title":{},"body":{"classes/Item.html":{},"miscellaneous/typealiases.html":{}}}],["itemdto",{"_index":216,"title":{"classes/ItemDTO.html":{}},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{},"classes/ItemDTO.html":{},"coverage.html":{}}}],["itemindex",{"_index":294,"title":{},"body":{"injectables/CartService.html":{}}}],["items",{"_index":188,"title":{},"body":{"classes/Cart.html":{},"injectables/CartService.html":{}}}],["itemschema",{"_index":338,"title":{},"body":{"classes/Item.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwt",{"_index":357,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtauthguard",{"_index":110,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"controllers/CartController.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":361,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":149,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":152,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":140,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["license",{"_index":658,"title":{},"body":{"properties.html":{}}}],["load",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["local",{"_index":376,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localauthguard",{"_index":112,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":141,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["login",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@request",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(req",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(user",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{}}}],["mall/product",{"_index":391,"title":{},"body":{"controllers/ProductController.html":{}}}],["matching",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cart.html":{},"controllers/CartController.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/CreateProductDTO.html":{},"classes/CreateUserDto.html":{},"classes/FilterProductDTO.html":{},"classes/Item.html":{},"classes/ItemDTO.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"guards/RolesGuard.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":600,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["miscellaneous",{"_index":606,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":632,"title":{},"body":{"index.html":{}}}],["model",{"_index":263,"title":{},"body":{"injectables/CartService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["module",{"_index":31,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{}}}],["modules",{"_index":33,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["mongoose",{"_index":204,"title":{},"body":{"classes/Cart.html":{},"injectables/CartService.html":{},"classes/Item.html":{},"classes/Product.html":{},"injectables/ProductService.html":{},"classes/User-1.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["mongoosemodule",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/CartModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forfeature",{"_index":256,"title":{},"body":{"modules/CartModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forroot(configuration().database.host",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/CreateProductDTO.html":{},"classes/Item.html":{},"classes/ItemDTO.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":507,"title":{},"body":{"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":150,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"classes/Cart.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/Item.html":{},"classes/Product.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/User-1.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":147,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":592,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CartController.html":{},"classes/CreateProductDTO.html":{},"classes/CreateUserDto.html":{},"classes/FilterProductDTO.html":{},"classes/ItemDTO.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["new",{"_index":244,"title":{},"body":{"controllers/CartController.html":{},"injectables/LocalStrategy.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"coverage.html":{}}}],["newcart",{"_index":281,"title":{},"body":{"injectables/CartService.html":{}}}],["newproduct",{"_index":488,"title":{},"body":{"injectables/ProductService.html":{}}}],["newproduct.save",{"_index":490,"title":{},"body":{"injectables/ProductService.html":{}}}],["newuser",{"_index":563,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.password",{"_index":565,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.save",{"_index":568,"title":{},"body":{"injectables/UserService.html":{}}}],["node.js",{"_index":617,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":226,"title":{},"body":{"controllers/CartController.html":{},"controllers/ProductController.html":{}}}],["notfoundexception('cart",{"_index":250,"title":{},"body":{"controllers/CartController.html":{}}}],["notfoundexception('item",{"_index":245,"title":{},"body":{"controllers/CartController.html":{}}}],["notfoundexception('product",{"_index":452,"title":{},"body":{"controllers/ProductController.html":{}}}],["npm",{"_index":626,"title":{},"body":{"index.html":{}}}],["null",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["number",{"_index":194,"title":{},"body":{"classes/Cart.html":{},"injectables/CartService.html":{},"classes/CreateProductDTO.html":{},"classes/Item.html":{},"classes/ItemDTO.html":{},"classes/Product.html":{}}}],["number(item.quantity",{"_index":299,"title":{},"body":{"injectables/CartService.html":{}}}],["number(quantity",{"_index":300,"title":{},"body":{"injectables/CartService.html":{}}}],["object.keys(filter",{"_index":442,"title":{},"body":{"controllers/ProductController.html":{}}}],["optional",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"classes/FilterProductDTO.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["out",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":653,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":588,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":227,"title":{},"body":{"controllers/CartController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["param('id",{"_index":456,"title":{},"body":{"controllers/ProductController.html":{}}}],["parameters",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["passport",{"_index":356,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":146,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":358,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":359,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"classes/User-1.html":{}}}],["payload",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.roles",{"_index":368,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":366,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.username",{"_index":367,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["poduct.dto",{"_index":430,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["poduct.dto.ts",{"_index":309,"title":{},"body":{"classes/CreateProductDTO.html":{},"coverage.html":{}}}],["poduct.dto.ts:11",{"_index":316,"title":{},"body":{"classes/CreateProductDTO.html":{}}}],["poduct.dto.ts:14",{"_index":313,"title":{},"body":{"classes/CreateProductDTO.html":{}}}],["poduct.dto.ts:5",{"_index":315,"title":{},"body":{"classes/CreateProductDTO.html":{}}}],["poduct.dto.ts:8",{"_index":314,"title":{},"body":{"classes/CreateProductDTO.html":{}}}],["post",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CartController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["post('/create",{"_index":453,"title":{},"body":{"controllers/ProductController.html":{}}}],["post('/login",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/register",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('create",{"_index":541,"title":{},"body":{"controllers/UserController.html":{}}}],["prefix",{"_index":70,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CartController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["price",{"_index":292,"title":{},"body":{"injectables/CartService.html":{},"classes/CreateProductDTO.html":{},"classes/Item.html":{},"classes/ItemDTO.html":{},"classes/Product.html":{}}}],["private",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CartService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["product",{"_index":333,"title":{"classes/Product.html":{}},"body":{"classes/Item.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"coverage.html":{}}}],["product'})@get('/:search/:category",{"_index":419,"title":{},"body":{"controllers/ProductController.html":{}}}],["product'})@get('/get",{"_index":414,"title":{},"body":{"controllers/ProductController.html":{}}}],["product'})@post('/create",{"_index":401,"title":{},"body":{"controllers/ProductController.html":{}}}],["product.category",{"_index":485,"title":{},"body":{"injectables/ProductService.html":{}}}],["product.controller",{"_index":464,"title":{},"body":{"modules/ProductModule.html":{}}}],["product.description.includes(search",{"_index":483,"title":{},"body":{"injectables/ProductService.html":{}}}],["product.dto",{"_index":432,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["product.dto.ts",{"_index":325,"title":{},"body":{"classes/FilterProductDTO.html":{},"coverage.html":{}}}],["product.dto.ts:5",{"_index":329,"title":{},"body":{"classes/FilterProductDTO.html":{}}}],["product.dto.ts:7",{"_index":328,"title":{},"body":{"classes/FilterProductDTO.html":{}}}],["product.name",{"_index":465,"title":{},"body":{"modules/ProductModule.html":{}}}],["product.name.includes(search",{"_index":482,"title":{},"body":{"injectables/ProductService.html":{}}}],["product.service",{"_index":434,"title":{},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{}}}],["product/:id",{"_index":407,"title":{},"body":{"controllers/ProductController.html":{}}}],["product/product.module",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["productcontroller",{"_index":389,"title":{"controllers/ProductController.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"coverage.html":{}}}],["productdocument",{"_index":384,"title":{},"body":{"classes/Product.html":{},"injectables/ProductService.html":{},"miscellaneous/typealiases.html":{}}}],["productid",{"_index":241,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{},"classes/Item.html":{},"classes/ItemDTO.html":{}}}],["production",{"_index":634,"title":{},"body":{"index.html":{}}}],["productmodel",{"_index":471,"title":{},"body":{"injectables/ProductService.html":{}}}],["productmodule",{"_index":40,"title":{"modules/ProductModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules.html":{},"overview.html":{}}}],["products",{"_index":418,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["products.filter",{"_index":481,"title":{},"body":{"injectables/ProductService.html":{}}}],["products.filter((product",{"_index":484,"title":{},"body":{"injectables/ProductService.html":{}}}],["productschema",{"_index":387,"title":{},"body":{"classes/Product.html":{},"modules/ProductModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["productservice",{"_index":433,"title":{"injectables/ProductService.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"coverage.html":{},"overview.html":{}}}],["progressive",{"_index":616,"title":{},"body":{"index.html":{}}}],["promise",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CartService.html":{},"injectables/LocalStrategy.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["prop",{"_index":192,"title":{},"body":{"classes/Cart.html":{},"classes/Item.html":{},"classes/Product.html":{},"classes/User-1.html":{}}}],["prop({type",{"_index":196,"title":{},"body":{"classes/Cart.html":{},"classes/Item.html":{}}}],["properties",{"_index":187,"title":{"properties.html":{}},"body":{"classes/Cart.html":{},"classes/CreateProductDTO.html":{},"classes/CreateUserDto.html":{},"classes/FilterProductDTO.html":{},"classes/Item.html":{},"classes/ItemDTO.html":{},"classes/Product.html":{},"classes/User-1.html":{},"properties.html":{}}}],["providers",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{}}}],["put",{"_index":427,"title":{},"body":{"controllers/ProductController.html":{}}}],["put('/update",{"_index":425,"title":{},"body":{"controllers/ProductController.html":{}}}],["quantity",{"_index":291,"title":{},"body":{"injectables/CartService.html":{},"classes/Item.html":{},"classes/ItemDTO.html":{}}}],["readonly",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["recalculatecart",{"_index":261,"title":{},"body":{"injectables/CartService.html":{}}}],["recalculatecart(cart",{"_index":274,"title":{},"body":{"injectables/CartService.html":{}}}],["ref",{"_index":198,"title":{},"body":{"classes/Cart.html":{},"classes/Item.html":{}}}],["reflect",{"_index":599,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":500,"title":{},"body":{"guards/RolesGuard.html":{}}}],["register",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(@body",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(createuserdto",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{}}}],["removeitemfromcart",{"_index":214,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{}}}],["removeitemfromcart(@request",{"_index":240,"title":{},"body":{"controllers/CartController.html":{}}}],["removeitemfromcart(req",{"_index":222,"title":{},"body":{"controllers/CartController.html":{}}}],["removeitemfromcart(userid",{"_index":277,"title":{},"body":{"injectables/CartService.html":{}}}],["req",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CartController.html":{}}}],["req.user",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{}}}],["req.user.userid",{"_index":238,"title":{},"body":{"controllers/CartController.html":{}}}],["request",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CartController.html":{}}}],["requiredroles",{"_index":510,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requiredroles.some((role",{"_index":515,"title":{},"body":{"guards/RolesGuard.html":{}}}],["reset",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["results",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cart.html":{},"controllers/CartController.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/CreateProductDTO.html":{},"classes/CreateUserDto.html":{},"classes/FilterProductDTO.html":{},"classes/Item.html":{},"classes/ItemDTO.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"guards/RolesGuard.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["rimraf",{"_index":602,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CartController.html":{},"guards/RolesGuard.html":{},"classes/User-1.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["roles",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/User-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles(role.admin",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{}}}],["roles(role.user",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CartController.html":{}}}],["roles_key",{"_index":508,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolesguard",{"_index":114,"title":{"guards/RolesGuard.html":{}},"body":{"controllers/AuthController.html":{},"controllers/CartController.html":{},"guards/RolesGuard.html":{},"coverage.html":{}}}],["rolesguard)@roles(role.admin)@get('/admin",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{}}}],["rolesguard)@roles(role.user)@delete",{"_index":223,"title":{},"body":{"controllers/CartController.html":{}}}],["rolesguard)@roles(role.user)@delete('/:id",{"_index":220,"title":{},"body":{"controllers/CartController.html":{}}}],["rolesguard)@roles(role.user)@get('/user",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{}}}],["rolesguard)@roles(role.user)@post",{"_index":217,"title":{},"body":{"controllers/CartController.html":{}}}],["run",{"_index":629,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":604,"title":{},"body":{"dependencies.html":{}}}],["sathya",{"_index":645,"title":{},"body":{"index.html":{}}}],["sathyaswaroopvandavasi@gmail.com",{"_index":648,"title":{},"body":{"index.html":{}}}],["scalable",{"_index":621,"title":{},"body":{"index.html":{}}}],["schema",{"_index":200,"title":{},"body":{"classes/Cart.html":{},"modules/CartModule.html":{},"classes/Item.html":{},"classes/Product.html":{},"modules/ProductModule.html":{},"classes/User-1.html":{},"modules/UserModule.html":{}}}],["schemafactory",{"_index":201,"title":{},"body":{"classes/Cart.html":{},"classes/Item.html":{},"classes/Product.html":{},"classes/User-1.html":{}}}],["schemafactory.createforclass(cart",{"_index":209,"title":{},"body":{"classes/Cart.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(item",{"_index":339,"title":{},"body":{"classes/Item.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(product",{"_index":388,"title":{},"body":{"classes/Product.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":525,"title":{},"body":{"classes/User-1.html":{},"miscellaneous/variables.html":{}}}],["schemas/cart.schema",{"_index":255,"title":{},"body":{"modules/CartModule.html":{},"injectables/CartService.html":{}}}],["schemas/product.schema",{"_index":435,"title":{},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{}}}],["schemas/user.schema",{"_index":537,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["schematypes",{"_index":203,"title":{},"body":{"classes/Cart.html":{},"classes/Item.html":{}}}],["schematypes.objectid",{"_index":207,"title":{},"body":{"classes/Cart.html":{},"classes/Item.html":{}}}],["search",{"_index":326,"title":{},"body":{"classes/FilterProductDTO.html":{},"injectables/ProductService.html":{}}}],["secret",{"_index":153,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":365,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["server",{"_index":622,"title":{},"body":{"index.html":{}}}],["setmetadata(roles_key",{"_index":669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":623,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":155,"title":{},"body":{"modules/AuthModule.html":{}}}],["single",{"_index":413,"title":{},"body":{"controllers/ProductController.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cart.html":{},"controllers/CartController.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/CreateProductDTO.html":{},"classes/CreateUserDto.html":{},"classes/FilterProductDTO.html":{},"classes/Item.html":{},"classes/ItemDTO.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"guards/RolesGuard.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["src/.../cart.schema.ts",{"_index":662,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../item.schema.ts",{"_index":663,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":613,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../product.schema.ts",{"_index":664,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../role.enum.ts",{"_index":608,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../roles.decorator.ts",{"_index":667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":665,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:10",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":64,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":65,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":69,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:20",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:27",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:34",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:41",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":142,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:11",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:19",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:6",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/decorators/roles.decorator",{"_index":228,"title":{},"body":{"controllers/CartController.html":{}}}],["src/auth/decorators/roles.decorator.ts",{"_index":577,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/enums/role.enum",{"_index":229,"title":{},"body":{"controllers/CartController.html":{},"classes/User-1.html":{}}}],["src/auth/enums/role.enum.ts",{"_index":609,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/auth/guards/jwt.guard",{"_index":230,"title":{},"body":{"controllers/CartController.html":{}}}],["src/auth/guards/jwt.guard.ts",{"_index":345,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/local.gurd.ts",{"_index":369,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/roles.guard",{"_index":231,"title":{},"body":{"controllers/CartController.html":{}}}],["src/auth/guards/roles.guard.ts",{"_index":497,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/auth/guards/roles.guard.ts:10",{"_index":504,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/guards/roles.guard.ts:7",{"_index":501,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/strategies/jwt.strategy.ts",{"_index":349,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts:16",{"_index":353,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/jwt.strategy.ts:7",{"_index":351,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/local.strategy.ts",{"_index":371,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/local.strategy.ts:12",{"_index":375,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/strategies/local.strategy.ts:7",{"_index":373,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/cart/cart.controller.ts",{"_index":211,"title":{},"body":{"controllers/CartController.html":{},"coverage.html":{}}}],["src/cart/cart.controller.ts:26",{"_index":218,"title":{},"body":{"controllers/CartController.html":{}}}],["src/cart/cart.controller.ts:35",{"_index":224,"title":{},"body":{"controllers/CartController.html":{}}}],["src/cart/cart.controller.ts:45",{"_index":221,"title":{},"body":{"controllers/CartController.html":{}}}],["src/cart/cart.module.ts",{"_index":253,"title":{},"body":{"modules/CartModule.html":{}}}],["src/cart/cart.service.ts",{"_index":258,"title":{},"body":{"injectables/CartService.html":{},"coverage.html":{}}}],["src/cart/cart.service.ts:13",{"_index":270,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/cart.service.ts:27",{"_index":273,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/cart.service.ts:32",{"_index":271,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/cart.service.ts:37",{"_index":275,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/cart.service.ts:44",{"_index":267,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/cart.service.ts:79",{"_index":278,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/cart.service.ts:8",{"_index":264,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/dtos/item.dto.ts",{"_index":340,"title":{},"body":{"classes/ItemDTO.html":{},"coverage.html":{}}}],["src/cart/dtos/item.dto.ts:11",{"_index":342,"title":{},"body":{"classes/ItemDTO.html":{}}}],["src/cart/dtos/item.dto.ts:5",{"_index":343,"title":{},"body":{"classes/ItemDTO.html":{}}}],["src/cart/dtos/item.dto.ts:7",{"_index":341,"title":{},"body":{"classes/ItemDTO.html":{}}}],["src/cart/dtos/item.dto.ts:9",{"_index":344,"title":{},"body":{"classes/ItemDTO.html":{}}}],["src/cart/schemas/cart.schema.ts",{"_index":186,"title":{},"body":{"classes/Cart.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/cart/schemas/cart.schema.ts:10",{"_index":199,"title":{},"body":{"classes/Cart.html":{}}}],["src/cart/schemas/cart.schema.ts:13",{"_index":193,"title":{},"body":{"classes/Cart.html":{}}}],["src/cart/schemas/cart.schema.ts:16",{"_index":195,"title":{},"body":{"classes/Cart.html":{}}}],["src/cart/schemas/item.schema.ts",{"_index":330,"title":{},"body":{"classes/Item.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/cart/schemas/item.schema.ts:12",{"_index":331,"title":{},"body":{"classes/Item.html":{}}}],["src/cart/schemas/item.schema.ts:15",{"_index":335,"title":{},"body":{"classes/Item.html":{}}}],["src/cart/schemas/item.schema.ts:18",{"_index":332,"title":{},"body":{"classes/Item.html":{}}}],["src/cart/schemas/item.schema.ts:21",{"_index":336,"title":{},"body":{"classes/Item.html":{}}}],["src/cart/schemas/item.schema.ts:9",{"_index":334,"title":{},"body":{"classes/Item.html":{}}}],["src/config/configuration",{"_index":144,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["src/main.ts",{"_index":583,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/product/dtos/create",{"_index":308,"title":{},"body":{"classes/CreateProductDTO.html":{},"coverage.html":{}}}],["src/product/dtos/filter",{"_index":324,"title":{},"body":{"classes/FilterProductDTO.html":{},"coverage.html":{}}}],["src/product/product.controller.ts",{"_index":390,"title":{},"body":{"controllers/ProductController.html":{},"coverage.html":{}}}],["src/product/product.controller.ts:25",{"_index":420,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:41",{"_index":415,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:52",{"_index":402,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:63",{"_index":426,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:81",{"_index":408,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.module.ts",{"_index":463,"title":{},"body":{"modules/ProductModule.html":{}}}],["src/product/product.service.ts",{"_index":466,"title":{},"body":{"injectables/ProductService.html":{},"coverage.html":{}}}],["src/product/product.service.ts:15",{"_index":476,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:37",{"_index":474,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:44",{"_index":477,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:51",{"_index":472,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:58",{"_index":478,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:72",{"_index":473,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:8",{"_index":470,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/schemas/product.schema.ts",{"_index":379,"title":{},"body":{"classes/Product.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/product/schemas/product.schema.ts:12",{"_index":381,"title":{},"body":{"classes/Product.html":{}}}],["src/product/schemas/product.schema.ts:15",{"_index":383,"title":{},"body":{"classes/Product.html":{}}}],["src/product/schemas/product.schema.ts:18",{"_index":380,"title":{},"body":{"classes/Product.html":{}}}],["src/product/schemas/product.schema.ts:9",{"_index":382,"title":{},"body":{"classes/Product.html":{}}}],["src/user/dtos/create",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/entities/user.entity.ts",{"_index":517,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/user/schemas/user.schema.ts",{"_index":518,"title":{},"body":{"classes/User-1.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/user/schemas/user.schema.ts:10",{"_index":522,"title":{},"body":{"classes/User-1.html":{}}}],["src/user/schemas/user.schema.ts:13",{"_index":519,"title":{},"body":{"classes/User-1.html":{}}}],["src/user/schemas/user.schema.ts:16",{"_index":520,"title":{},"body":{"classes/User-1.html":{}}}],["src/user/schemas/user.schema.ts:19",{"_index":521,"title":{},"body":{"classes/User-1.html":{}}}],["src/user/user.controller.ts",{"_index":527,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:12",{"_index":532,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:18",{"_index":535,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module",{"_index":145,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/user/user.module.ts",{"_index":548,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/user/user.service.ts",{"_index":552,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:14",{"_index":559,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:20",{"_index":561,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:8",{"_index":556,"title":{},"body":{"injectables/UserService.html":{}}}],["start",{"_index":630,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":633,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":635,"title":{},"body":{"index.html":{}}}],["started",{"_index":615,"title":{"index.html":{}},"body":{}}],["statements",{"_index":573,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":642,"title":{},"body":{"index.html":{}}}],["strategies/jwt.strategy",{"_index":148,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/local.strategy",{"_index":151,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":355,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/Cart.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"classes/CreateProductDTO.html":{},"classes/CreateUserDto.html":{},"classes/FilterProductDTO.html":{},"classes/Item.html":{},"classes/ItemDTO.html":{},"injectables/LocalStrategy.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{}}}],["subtotalprice",{"_index":269,"title":{},"body":{"injectables/CartService.html":{},"classes/Item.html":{}}}],["summary",{"_index":438,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["super",{"_index":360,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["support",{"_index":650,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":651,"title":{},"body":{"modules.html":{}}}],["swaroop",{"_index":646,"title":{},"body":{"index.html":{}}}],["table",{"_index":587,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":586,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":638,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":641,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":640,"title":{},"body":{"index.html":{}}}],["tests",{"_index":637,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":28,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(req.user",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(username",{"_index":378,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.cartmodel.create",{"_index":282,"title":{},"body":{"injectables/CartService.html":{}}}],["this.cartmodel.findone",{"_index":283,"title":{},"body":{"injectables/CartService.html":{}}}],["this.cartmodel.findoneandremove",{"_index":285,"title":{},"body":{"injectables/CartService.html":{}}}],["this.cartservice.additemtocart(userid",{"_index":239,"title":{},"body":{"controllers/CartController.html":{}}}],["this.cartservice.deletecart(userid",{"_index":249,"title":{},"body":{"controllers/CartController.html":{}}}],["this.cartservice.removeitemfromcart(userid",{"_index":242,"title":{},"body":{"controllers/CartController.html":{}}}],["this.createcart",{"_index":305,"title":{},"body":{"injectables/CartService.html":{}}}],["this.getallproducts",{"_index":480,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.getcart(userid",{"_index":293,"title":{},"body":{"injectables/CartService.html":{}}}],["this.getuser(id",{"_index":544,"title":{},"body":{"controllers/UserController.html":{}}}],["this.jwtservice.sign(payload",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.productmodel.create(createproductdto",{"_index":489,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productmodel.find().exec",{"_index":486,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productmodel.findbyid(id).exec",{"_index":487,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productmodel.findbyidandremove(id",{"_index":494,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productmodel.findbyidandupdate",{"_index":492,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productservice.addproduct(createproductdto",{"_index":455,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.deleteproduct(id",{"_index":460,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.getallproducts",{"_index":446,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.getfilteredproducts(filter",{"_index":444,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.getproduct(id",{"_index":451,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.updateproduct",{"_index":457,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.recalculatecart(cart",{"_index":302,"title":{},"body":{"injectables/CartService.html":{}}}],["this.reflector.getallandoverride(roles_key",{"_index":511,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.usermodel.create(createuserdto",{"_index":564,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findone",{"_index":569,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.adduser(createuserdto",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["this.userservice.finduser(username",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":243,"title":{},"body":{"controllers/CartController.html":{},"injectables/LocalStrategy.html":{},"controllers/ProductController.html":{}}}],["timestamps",{"_index":385,"title":{},"body":{"classes/Product.html":{}}}],["totalprice",{"_index":189,"title":{},"body":{"classes/Cart.html":{},"injectables/CartService.html":{}}}],["touch",{"_index":643,"title":{},"body":{"index.html":{}}}],["true",{"_index":386,"title":{},"body":{"classes/Product.html":{},"injectables/ProductService.html":{},"guards/RolesGuard.html":{}}}],["try",{"_index":441,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{}}}],["type",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Cart.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"classes/CreateProductDTO.html":{},"classes/CreateUserDto.html":{},"classes/FilterProductDTO.html":{},"classes/Item.html":{},"classes/ItemDTO.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"guards/RolesGuard.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":660,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["unauthorizedexception",{"_index":377,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["undefined",{"_index":197,"title":{},"body":{"classes/Cart.html":{},"controllers/CartController.html":{},"classes/Item.html":{}}}],["unit",{"_index":636,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductController.html":{}}}],["unlicensed",{"_index":659,"title":{},"body":{"properties.html":{}}}],["update",{"_index":424,"title":{},"body":{"controllers/ProductController.html":{}}}],["updatedproduct",{"_index":491,"title":{},"body":{"injectables/ProductService.html":{}}}],["updateproduct",{"_index":396,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["updateproduct(id",{"_index":423,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["useguards",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CartController.html":{}}}],["useguards(jwtauthguard",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CartController.html":{}}}],["useguards(localauthguard",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard)@post('/login",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":123,"title":{"classes/User.html":{},"classes/User-1.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Cart.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["user._id",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.controller",{"_index":550,"title":{},"body":{"modules/UserModule.html":{}}}],["user.dto",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":317,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:11",{"_index":321,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:5",{"_index":322,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:7",{"_index":319,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:9",{"_index":320,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.name",{"_index":551,"title":{},"body":{"modules/UserModule.html":{}}}],["user.password",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.roles",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.roles?.includes(role",{"_index":516,"title":{},"body":{"guards/RolesGuard.html":{}}}],["user.service",{"_index":536,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.username",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["user/user.module",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["user/user.service",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{}}}],["usercontroller",{"_index":526,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userdocument",{"_index":523,"title":{},"body":{"classes/User-1.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["userid",{"_index":190,"title":{},"body":{"classes/Cart.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"injectables/JwtStrategy.html":{}}}],["usermodel",{"_index":557,"title":{},"body":{"injectables/UserService.html":{}}}],["usermodule",{"_index":41,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/User-1.html":{},"injectables/UserService.html":{}}}],["userschema",{"_index":524,"title":{},"body":{"classes/User-1.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userservice",{"_index":102,"title":{"injectables/UserService.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["validate",{"_index":350,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":352,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(username",{"_index":374,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validateuser",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(username",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{}}}],["value",{"_index":610,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["vandavasi",{"_index":647,"title":{},"body":{"index.html":{}}}],["variable",{"_index":578,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":666,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":656,"title":{},"body":{"properties.html":{}}}],["void",{"_index":276,"title":{},"body":{"injectables/CartService.html":{}}}],["watch",{"_index":631,"title":{},"body":{"index.html":{}}}],["world",{"_index":67,"title":{},"body":{"injectables/AppService.html":{}}}],["yes",{"_index":422,"title":{},"body":{"controllers/ProductController.html":{}}}],["zoom",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { AppService } from './app.service';\n@ApiTags('main')\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCartModule\n\nCartModule\n\nAppModule -->\n\nCartModule->AppModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CartModule\n                        \n                        \n                            ProductModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport configuration from './config/configuration';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ProductModule } from './product/product.module';\nimport { UserModule } from './user/user.module';\nimport { AuthModule } from './auth/auth.module';\nimport { CartModule } from './cart/cart.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({ load: [configuration] }),\n    MongooseModule.forRoot(configuration().database.host),\n    ProductModule,\n    UserModule,\n    AuthModule,\n    CartModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDashboard\n                            \n                            \n                                getProfile\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDashboard\n                        \n                    \n                \n            \n            \n                \ngetDashboard(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard, RolesGuard)@Roles(Role.Admin)@Get('/admin')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProfile\n                        \n                    \n                \n            \n            \n                \ngetProfile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard, RolesGuard)@Roles(Role.User)@Get('/user')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(LocalAuthGuard)@Post('/login')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(createUserDTO: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/register')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDTO\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post, UseGuards } from '@nestjs/common';\nimport { CreateUserDto } from 'src/user/dtos/create-user.dto';\nimport { UserService } from 'src/user/user.service';\nimport { AuthService } from './auth.service';\nimport { Roles } from './decorators/roles.decorator';\nimport { Role } from './enums/role.enum';\nimport { JwtAuthGuard } from './guards/jwt.guard';\nimport { LocalAuthGuard } from './guards/local.gurd';\nimport { RolesGuard } from './guards/roles.guard';\nimport { Request } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\n@ApiTags('auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(\n    private readonly authService: AuthService,\n    private userService: UserService,\n  ) {}\n  @Post('/register')\n  async register(@Body() createUserDTO: CreateUserDto) {\n    const user = await this.userService.addUser(createUserDTO);\n    return user;\n  }\n\n  @UseGuards(LocalAuthGuard)\n  @Post('/login')\n  async login(@Request() req) {\n    return this.authService.login(req.user);\n  }\n\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(Role.User)\n  @Get('/user')\n  getProfile(@Request() req) {\n    return req.user;\n  }\n\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(Role.Admin)\n  @Get('/admin')\n  getDashboard(@Request() req) {\n    return req.user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport configuration from 'src/config/configuration';\nimport { UserModule } from 'src/user/user.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtStrategy } from './strategies/jwt.strategy';\nimport { JwtModule } from '@nestjs/jwt';\nimport { LocalStrategy } from './strategies/local.strategy';\n@Module({\n  imports: [\n    UserModule,\n    PassportModule,\n    JwtModule.register({\n      secret: configuration().auth.jwtSecret,\n      signOptions: { expiresIn: '3600s' },\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UserService } from '../user/user.service';\nimport { JwtService } from '@nestjs/jwt';\nimport * as bcrypt from 'bcrypt';\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly userService: UserService,\n    private readonly jwtService: JwtService,\n  ) {}\n  async validateUser(username: string, password: string): Promise {\n    const user = await this.userService.findUser(username);\n    const isPasswordMatch = await bcrypt.compare(password, user.password);\n    if (user && isPasswordMatch) {\n      return user;\n    }\n    return null;\n  }\n  async login(user: any) {\n    const payload = {\n      username: user.username,\n      sub: user._id,\n      roles: user.roles,\n    };\n    return {\n      access_token: this.jwtService.sign(payload),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Cart.html":{"url":"classes/Cart.html","title":"class - Cart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Cart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/schemas/cart.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                            \n                                totalPrice\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Item[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/schemas/cart.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/schemas/cart.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'User'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/schemas/cart.schema.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, SchemaTypes } from 'mongoose';\nimport { Item } from './item.schema';\n\nexport type CartDocument = Cart & Document;\n\n@Schema()\nexport class Cart {\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'User' })\n  userId: string;\n\n  @Prop()\n  items: Item[];\n\n  @Prop()\n  totalPrice: number;\n}\n\nexport const CartSchema = SchemaFactory.createForClass(Cart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CartController.html":{"url":"controllers/CartController.html","title":"controller - CartController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CartController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/cart.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                cart\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addItemToCart\n                            \n                            \n                                    Async\n                                deleteCart\n                            \n                            \n                                    Async\n                                removeItemFromCart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addItemToCart\n                        \n                    \n                \n            \n            \n                \n                    \n                    addItemToCart(req, itemDTO: ItemDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard, RolesGuard)@Roles(Role.User)@Post('/')\n                \n            \n\n            \n                \n                    Defined in src/cart/cart.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    itemDTO\n                                    \n                                                ItemDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteCart\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteCart(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard, RolesGuard)@Roles(Role.User)@Delete('/:id')\n                \n            \n\n            \n                \n                    Defined in src/cart/cart.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeItemFromCart\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeItemFromCart(req, undefined)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard, RolesGuard)@Roles(Role.User)@Delete('/')\n                \n            \n\n            \n                \n                    Defined in src/cart/cart.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Request,\n  Body,\n  Controller,\n  Post,\n  UseGuards,\n  Delete,\n  NotFoundException,\n  Param,\n} from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { Roles } from 'src/auth/decorators/roles.decorator';\nimport { Role } from 'src/auth/enums/role.enum';\nimport { JwtAuthGuard } from 'src/auth/guards/jwt.guard';\nimport { RolesGuard } from 'src/auth/guards/roles.guard';\nimport { CartService } from './cart.service';\nimport { ItemDTO } from './dtos/item.dto';\n@ApiTags('cart')\n@Controller('cart')\nexport class CartController {\n  constructor(private readonly cartService: CartService) {}\n\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(Role.User)\n  @Post('/')\n  async addItemToCart(@Request() req, @Body() itemDTO: ItemDTO) {\n    const userId = req.user.userId;\n    const cart = await this.cartService.addItemToCart(userId, itemDTO);\n    return cart;\n  }\n\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(Role.User)\n  @Delete('/')\n  async removeItemFromCart(@Request() req, @Body() { productId }) {\n    const userId = req.user.userId;\n    const cart = await this.cartService.removeItemFromCart(userId, productId);\n    if (!cart) throw new NotFoundException('Item does not exist');\n    return cart;\n  }\n\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(Role.User)\n  @Delete('/:id')\n  async deleteCart(@Param('id') userId: string) {\n    const cart = await this.cartService.deleteCart(userId);\n    if (!cart) throw new NotFoundException('Cart does not exist');\n    return cart;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CartModule.html":{"url":"modules/CartModule.html","title":"module - CartModule","body":"\n                   \n\n\n\n\n    Modules\n    CartModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CartModule\n\n\n\ncluster_CartModule_providers\n\n\n\n\nCartService\n\nCartService\n\n\n\nCartModule\n\nCartModule\n\nCartModule -->\n\nCartService->CartModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cart/cart.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CartService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CartController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CartService } from './cart.service';\nimport { CartController } from './cart.controller';\nimport { Cart, CartSchema } from './schemas/cart.schema';\nimport { MongooseModule } from '@nestjs/mongoose';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Cart.name, schema: CartSchema }]),\n  ],\n  controllers: [CartController],\n  providers: [CartService],\n})\nexport class CartModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CartService.html":{"url":"injectables/CartService.html","title":"injectable - CartService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CartService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/cart.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addItemToCart\n                            \n                            \n                                    Async\n                                createCart\n                            \n                            \n                                    Async\n                                deleteCart\n                            \n                            \n                                    Async\n                                getCart\n                            \n                            \n                                    Private\n                                recalculateCart\n                            \n                            \n                                    Async\n                                removeItemFromCart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cartModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/cart/cart.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cartModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addItemToCart\n                        \n                    \n                \n            \n            \n                \n                    \n                    addItemToCart(userId: string, itemDTO: ItemDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/cart/cart.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    itemDTO\n                                    \n                                                ItemDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createCart\n                        \n                    \n                \n            \n            \n                \n                    \n                    createCart(userId: string, itemDTO: ItemDTO, subTotalPrice: number, totalPrice: number)\n                \n            \n\n\n            \n                \n                    Defined in src/cart/cart.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    itemDTO\n                                    \n                                                ItemDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    subTotalPrice\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    totalPrice\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteCart\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteCart(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/cart/cart.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCart\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCart(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/cart/cart.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        recalculateCart\n                        \n                    \n                \n            \n            \n                \n                    \n                    recalculateCart(cart: CartDocument)\n                \n            \n\n\n            \n                \n                    Defined in src/cart/cart.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cart\n                                    \n                                                CartDocument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeItemFromCart\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeItemFromCart(userId: string, productId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/cart/cart.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { ItemDTO } from './dtos/item.dto';\nimport { Cart, CartDocument } from './schemas/cart.schema';\n\n@Injectable()\nexport class CartService {\n  constructor(\n    @InjectModel('Cart') private readonly cartModel: Model,\n  ) {}\n\n  async createCart(\n    userId: string,\n    itemDTO: ItemDTO,\n    subTotalPrice: number,\n    totalPrice: number,\n  ): Promise {\n    const newCart = await this.cartModel.create({\n      userId,\n      items: [{ ...itemDTO, subTotalPrice }],\n      totalPrice,\n    });\n    return newCart;\n  }\n\n  async getCart(userId: string): Promise {\n    const cart = await this.cartModel.findOne({ userId });\n    return cart;\n  }\n\n  async deleteCart(userId: string): Promise {\n    const deletedCart = await this.cartModel.findOneAndRemove({ userId });\n    return deletedCart;\n  }\n\n  private recalculateCart(cart: CartDocument) {\n    cart.totalPrice = 0;\n    cart.items.forEach((item) => {\n      cart.totalPrice += item.quantity * item.price;\n    });\n  }\n\n  async addItemToCart(userId: string, itemDTO: ItemDTO): Promise {\n    const { productId, quantity, price } = itemDTO;\n    const subTotalPrice = quantity * price;\n\n    const cart = await this.getCart(userId);\n\n    if (cart) {\n      const itemIndex = cart.items.findIndex(\n        (item) => item.productId == productId,\n      );\n\n      if (itemIndex > -1) {\n        const item = cart.items[itemIndex];\n        item.quantity = Number(item.quantity) + Number(quantity);\n        item.subTotalPrice = item.quantity * item.price;\n\n        cart.items[itemIndex] = item;\n        this.recalculateCart(cart);\n        return cart.save();\n      } else {\n        cart.items.push({ ...itemDTO, subTotalPrice });\n        this.recalculateCart(cart);\n        return cart.save();\n      }\n    } else {\n      const newCart = await this.createCart(\n        userId,\n        itemDTO,\n        subTotalPrice,\n        price,\n      );\n      return newCart;\n    }\n  }\n\n  async removeItemFromCart(userId: string, productId: string): Promise {\n    const cart = await this.getCart(userId);\n\n    const itemIndex = cart.items.findIndex(\n      (item) => item.productId == productId,\n    );\n\n    if (itemIndex > -1) {\n      cart.items.splice(itemIndex, 1);\n      return cart.save();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductDTO.html":{"url":"classes/CreateProductDTO.html","title":"class - CreateProductDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dtos/create-poduct.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dtos/create-poduct.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dtos/create-poduct.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dtos/create-poduct.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dtos/create-poduct.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateProductDTO {\n  @ApiProperty()\n  name: string;\n\n  @ApiProperty()\n  description: string;\n\n  @ApiProperty()\n  price: number;\n\n  @ApiProperty()\n  category: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dtos/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                            \n                                roles\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/create-user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/create-user.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/create-user.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/create-user.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateUserDto {\n  @ApiProperty()\n  username: string;\n  @ApiProperty()\n  email: string;\n  @ApiProperty()\n  password: string;\n  @ApiProperty()\n  roles: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FilterProductDTO.html":{"url":"classes/FilterProductDTO.html","title":"class - FilterProductDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FilterProductDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dtos/filter-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                category\n                            \n                            \n                                    Optional\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dtos/filter-product.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        search\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dtos/filter-product.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class FilterProductDTO {\n  @ApiPropertyOptional()\n  search?: string;\n  @ApiPropertyOptional()\n  category?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Item.html":{"url":"classes/Item.html","title":"class - Item","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Item\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/schemas/item.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                price\n                            \n                            \n                                productId\n                            \n                            \n                                quantity\n                            \n                            \n                                subTotalPrice\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/schemas/item.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/schemas/item.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'Product'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/schemas/item.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/schemas/item.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subTotalPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/schemas/item.schema.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, SchemaTypes } from 'mongoose';\n\nexport type ItemDocument = Item & Document;\n\n@Schema()\nexport class Item {\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'Product' })\n  productId: string;\n\n  @Prop()\n  name: string;\n\n  @Prop()\n  quantity: number;\n\n  @Prop()\n  price: number;\n\n  @Prop()\n  subTotalPrice: number;\n}\n\nexport const ItemSchema = SchemaFactory.createForClass(Item);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ItemDTO.html":{"url":"classes/ItemDTO.html","title":"class - ItemDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ItemDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/dtos/item.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                price\n                            \n                            \n                                productId\n                            \n                            \n                                quantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/dtos/item.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/dtos/item.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/dtos/item.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/dtos/item.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class ItemDTO {\n  @ApiProperty()\n  productId: string;\n  @ApiProperty()\n  name: string;\n  @ApiProperty()\n  quantity: number;\n  @ApiProperty()\n  price: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt.strategy.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport configuration from 'src/config/configuration';\n// import configuration from './config/configuration';\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configuration().auth.jwtSecret,\n    });\n  }\n\n  async validate(payload: any) {\n    return {\n      userId: payload.sub,\n      username: payload.username,\n      roles: payload.roles,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/local.gurd.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/local.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/local.strategy.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from '../auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super();\n  }\n\n  async validate(username: string, password: string): Promise {\n    const user = await this.authService.validateUser(username, password);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Product.html":{"url":"classes/Product.html","title":"class - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/schemas/product.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/schemas/product.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/schemas/product.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/schemas/product.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/schemas/product.schema.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type ProductDocument = Product & Document;\n\n@Schema({ timestamps: true })\nexport class Product {\n  @Prop()\n  name: string;\n\n  @Prop()\n  description: string;\n\n  @Prop()\n  price: number;\n\n  @Prop()\n  category: string;\n}\n\nexport const ProductSchema = SchemaFactory.createForClass(Product);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductController.html":{"url":"controllers/ProductController.html","title":"controller - ProductController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                mall/product\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addProduct\n                            \n                            \n                                    Async\n                                deleteProduct\n                            \n                            \n                                    Async\n                                getProduct\n                            \n                            \n                                    Async\n                                getProducts\n                            \n                            \n                                    Async\n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    addProduct(createProductDTO: CreateProductDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'This Api will create new Product'})@Post('/create-product')\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProductDTO\n                                    \n                                                CreateProductDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteProduct(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'This Api will delete the product from database based on product ID'})@Delete('/delete-product/:id')\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProduct(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'This Api will gets you information about single product'})@Get('/get-product/:id')\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProducts\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProducts(filter?: FilterProductDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'This Api will filters the products based on category or name of the product'})@Get('/:search/:category')\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                FilterProductDTO\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProduct(id: string, createProductDTO: CreateProductDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'This Api will update information of the product in the database based on product ID '})@Put('/update-product/:id')\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createProductDTO\n                                    \n                                                CreateProductDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  NotFoundException,\n  Param,\n  Post,\n  Put,\n} from '@nestjs/common';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { CreateProductDTO } from './dtos/create-poduct.dto';\nimport { FilterProductDTO } from './dtos/filter-product.dto';\nimport { ProductService } from './product.service';\nimport { Product } from './schemas/product.schema';\n@ApiTags('product')\n@Controller('mall/product')\nexport class ProductController {\n  constructor(private productService: ProductService) {}\n  @ApiOperation({\n    summary:\n      'This Api will filters the products based on category or name of the product',\n  })\n  @Get('/:search/:category')\n  async getProducts(@Param() filter?: FilterProductDTO): Promise {\n    try {\n      if (Object.keys(filter)) {\n        const filteredProducts =\n          this.productService.getFilteredProducts(filter);\n        return filteredProducts;\n      } else {\n        const allProducts = await this.productService.getAllProducts();\n        return allProducts;\n      }\n    } catch (error) {}\n  }\n  @ApiOperation({\n    summary: 'This Api will gets you information about single product',\n  })\n  @Get('/get-product/:id')\n  async getProduct(@Param('id') id: string): Promise {\n    try {\n      const product = await this.productService.getProduct(id);\n      if (!product) throw new NotFoundException('Product does not exist!');\n      return product;\n    } catch (error) {}\n  }\n  @ApiOperation({\n    summary: 'This Api will create new Product',\n  })\n  @Post('/create-product')\n  async addProduct(@Body() createProductDTO: CreateProductDTO) {\n    try {\n      const product = await this.productService.addProduct(createProductDTO);\n      return product;\n    } catch (error) {}\n  }\n  @ApiOperation({\n    summary:\n      'This Api will update information of the product in the database based on product ID ',\n  })\n  @Put('/update-product/:id')\n  async updateProduct(\n    @Param('id') id: string,\n    @Body() createProductDTO: CreateProductDTO,\n  ) {\n    try {\n      const product = await this.productService.updateProduct(\n        id,\n        createProductDTO,\n      );\n      if (!product) throw new NotFoundException('Product does not exist!');\n      return product;\n    } catch (error) {}\n  }\n  @ApiOperation({\n    summary:\n      'This Api will delete the product from database based on product ID',\n  })\n  @Delete('/delete-product/:id')\n  async deleteProduct(@Param('id') id: string) {\n    try {\n      const product = await this.productService.deleteProduct(id);\n      if (!product) throw new NotFoundException('Product does not exist');\n      return product;\n    } catch (error) {}\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductModule.html":{"url":"modules/ProductModule.html","title":"module - ProductModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_providers\n\n\n\n\nProductService\n\nProductService\n\n\n\nProductModule\n\nProductModule\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/product/product.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductService } from './product.service';\nimport { ProductController } from './product.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Product, ProductSchema } from './schemas/product.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Product.name, schema: ProductSchema }]),\n  ],\n  providers: [ProductService],\n  controllers: [ProductController],\n})\nexport class ProductModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductService.html":{"url":"injectables/ProductService.html","title":"injectable - ProductService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addProduct\n                            \n                            \n                                    Async\n                                deleteProduct\n                            \n                            \n                                    Async\n                                getAllProducts\n                            \n                            \n                                    Async\n                                getFilteredProducts\n                            \n                            \n                                    Async\n                                getProduct\n                            \n                            \n                                    Async\n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/product/product.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    addProduct(createProductDTO: CreateProductDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProductDTO\n                                    \n                                                CreateProductDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteProduct(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllProducts\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllProducts()\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getFilteredProducts\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFilteredProducts(filterProductDTO: FilterProductDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterProductDTO\n                                    \n                                                FilterProductDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProduct(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProduct(id: string, createProductDTO: CreateProductDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createProductDTO\n                                    \n                                                CreateProductDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CreateProductDTO } from './dtos/create-poduct.dto';\nimport { FilterProductDTO } from './dtos/filter-product.dto';\nimport { Product, ProductDocument } from './schemas/product.schema';\n@Injectable()\nexport class ProductService {\n  constructor(\n    @InjectModel(Product.name)\n    private readonly productModel: Model,\n  ) {\n    productModel;\n  }\n  async getFilteredProducts(\n    filterProductDTO: FilterProductDTO,\n  ): Promise {\n    const { category, search } = filterProductDTO;\n    let products = await this.getAllProducts();\n    try {\n      if (search) {\n        products = products.filter(\n          (product) =>\n            product.name.includes(search) ||\n            product.description.includes(search),\n        );\n      }\n\n      if (category) {\n        products = products.filter((product) => product.category === category);\n      }\n\n      return products;\n    } catch (error) {}\n  }\n\n  async getAllProducts(): Promise {\n    try {\n      const products = await this.productModel.find().exec();\n      return products;\n    } catch (error) {}\n  }\n\n  async getProduct(id: string): Promise {\n    try {\n      const product = await this.productModel.findById(id).exec();\n      return product;\n    } catch (error) {}\n  }\n\n  async addProduct(createProductDTO: CreateProductDTO): Promise {\n    try {\n      const newProduct = await this.productModel.create(createProductDTO);\n      return newProduct.save();\n    } catch (error) {}\n  }\n\n  async updateProduct(\n    id: string,\n    createProductDTO: CreateProductDTO,\n  ): Promise {\n    try {\n      const updatedProduct = await this.productModel.findByIdAndUpdate(\n        id,\n        createProductDTO,\n        { new: true },\n      );\n      return updatedProduct;\n    } catch (error) {}\n  }\n\n  async deleteProduct(id: string): Promise {\n    try {\n      const deletedProduct = await this.productModel.findByIdAndRemove(id);\n      return deletedProduct;\n    } catch (error) {}\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/roles.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/roles.guard.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Role } from '../enums/role.enum';\nimport { ROLES_KEY } from '../decorators/roles.decorator';\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private reflector: Reflector) {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const requiredRoles = this.reflector.getAllAndOverride(ROLES_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (!requiredRoles) {\n      return true;\n    }\n    const { user } = context.switchToHttp().getRequest();\n    return requiredRoles.some((role) => user.roles?.includes(role));\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User-1.html":{"url":"classes/User-1.html","title":"class - User-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/schemas/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                            \n                                roles\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/schemas/user.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/schemas/user.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/schemas/user.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/schemas/user.schema.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { Role } from 'src/auth/enums/role.enum';\n\nexport type UserDocument = User & Document;\n\n@Schema()\nexport class User {\n  @Prop()\n  username: string;\n\n  @Prop()\n  email: string;\n\n  @Prop()\n  password: string;\n\n  @Prop()\n  roles: Role[];\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                getUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'This Api will create a User for this App'})@Post('create-user')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { CreateUserDto } from './dtos/create-user.dto';\nimport { User } from './schemas/user.schema';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\n@ApiTags('user')\n@Controller('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n  @ApiOperation({ summary: 'This Api will create a User for this App' })\n  @Post('create-user')\n  async createUser(@Body() createUserDto: CreateUserDto): Promise {\n    try {\n      return await this.userService.addUser(createUserDto);\n    } catch (error) {}\n  }\n  @Get('/:id')\n  async getUser(@Param('id') id: string): Promise {\n    try {\n      return await this.getUser(id);\n    } catch (error) {}\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserModule_exports\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\nimport { User, UserSchema } from './schemas/user.schema';\nimport { MongooseModule } from '@nestjs/mongoose';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: User.name, schema: UserSchema }]),\n  ],\n  controllers: [UserController],\n  providers: [UserService],\n  exports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addUser\n                            \n                            \n                                    Async\n                                findUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    addUser(createUserDTO: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDTO\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findUser(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CreateUserDto } from './dtos/create-user.dto';\nimport { User, UserDocument } from './schemas/user.schema';\nimport * as bcrypt from 'bcrypt';\n@Injectable()\nexport class UserService {\n  constructor(\n    @InjectModel('User') private readonly userModel: Model,\n  ) {\n    userModel;\n  }\n  async addUser(createUserDTO: CreateUserDto): Promise {\n    const newUser = await this.userModel.create(createUserDTO);\n    newUser.password = await bcrypt.hash(newUser.password, 10);\n    return newUser.save();\n  }\n\n  async findUser(username: string): Promise {\n    const user = await this.userModel.findOne({ username: username });\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/decorators/roles.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/decorators/roles.decorator.ts\n            \n            variable\n            ROLES_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guards/local.gurd.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guards/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/cart/cart.controller.ts\n            \n            controller\n            CartController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/cart/cart.service.ts\n            \n            injectable\n            CartService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/cart/dtos/item.dto.ts\n            \n            class\n            ItemDTO\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/cart/schemas/cart.schema.ts\n            \n            class\n            Cart\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/cart/schemas/cart.schema.ts\n            \n            variable\n            CartSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cart/schemas/item.schema.ts\n            \n            class\n            Item\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/cart/schemas/item.schema.ts\n            \n            variable\n            ItemSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product/dtos/create-poduct.dto.ts\n            \n            class\n            CreateProductDTO\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/product/dtos/filter-product.dto.ts\n            \n            class\n            FilterProductDTO\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/product/product.controller.ts\n            \n            controller\n            ProductController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/product/product.service.ts\n            \n            injectable\n            ProductService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/product/schemas/product.schema.ts\n            \n            class\n            Product\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/product/schemas/product.schema.ts\n            \n            variable\n            ProductSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/dtos/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/schemas/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.2.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/jwt : ^9.0.0\n        \n            @nestjs/mongoose : ^9.2.1\n        \n            @nestjs/passport : ^9.0.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^6.1.3\n        \n            mongoose : ^6.7.2\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Role   (src/.../role.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/enums/role.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 User\n                            \n                        \n                        \n                            \n                                Value : user\n                            \n                        \n                        \n                            \n                                 Admin\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nStay in touch\n\nAuthor - Sathya Swaroop Vandavasi\nEmail - sathyaswaroopvandavasi@gmail.com\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CartModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CartModule\n\n\n\ncluster_CartModule_providers\n\n\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCartModule\n\nCartModule\n\nAppModule -->\n\nCartModule->AppModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nCartService\n\nCartService\n\nCartModule -->\n\nCartService->CartModule\n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CartDocument   (src/.../cart.schema.ts)\n                        \n                        \n                            ItemDocument   (src/.../item.schema.ts)\n                        \n                        \n                            ProductDocument   (src/.../product.schema.ts)\n                        \n                        \n                            UserDocument   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/cart/schemas/cart.schema.ts\n    \n    \n        \n            \n                \n                    \n                    CartDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/cart/schemas/item.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ItemDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/product/schemas/product.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ProductDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/user/schemas/user.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CartSchema   (src/.../cart.schema.ts)\n                        \n                        \n                            ItemSchema   (src/.../item.schema.ts)\n                        \n                        \n                            ProductSchema   (src/.../product.schema.ts)\n                        \n                        \n                            Roles   (src/.../roles.decorator.ts)\n                        \n                        \n                            ROLES_KEY   (src/.../roles.decorator.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/cart/schemas/cart.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CartSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Cart)\n                    \n                \n\n\n        \n    \n\n    src/cart/schemas/item.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ItemSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Item)\n                    \n                \n\n\n        \n    \n\n    src/product/schemas/product.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ProductSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Product)\n                    \n                \n\n\n        \n    \n\n    src/auth/decorators/roles.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: Role[]) => SetMetadata(ROLES_KEY, roles)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROLES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'roles'\n                    \n                \n\n\n        \n    \n\n    src/user/schemas/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
